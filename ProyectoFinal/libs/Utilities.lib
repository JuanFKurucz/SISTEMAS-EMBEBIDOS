
/*** BeginHeader UT_delay */
void UT_delay( long p_ms );
/*** EndHeader */
void UT_delay( long p_ms )
{
	long timer;

	timer = MS_TIMER + p_ms;

	while ((long)(MS_TIMER - timer) < 0);
}

/*** BeginHeader UT_ASCIItoCharNum */
char UT_ASCIItoCharNum( char p_input );
/*** EndHeader */
char UT_ASCIItoCharNum( char p_input )
{
	if( p_input >= '0' && p_input <= '9' )
	{
		return (p_input-'0');
	}
	else if( p_input >= 'A' && p_input <= 'F')
	{
		return (p_input + 10 - 'A');
	}
	else
	{
		return -1;
	}
}

/*** BeginHeader UT_cortarString */
void UT_cortarString(char * string, int inicio, int fin, char * resultado);
/*** EndHeader */
void UT_cortarString(char * string, int inicio, int fin, char * resultado){
	int i;
	for(i=0;i<inicio;i++){
		string++;
	}
	for(i=0;i<fin-inicio;i++){
		(*resultado)=(*string);
		resultado++;
		string++;
	}
	(*resultado) = '\0';
}

/*** BeginHeader UT_isEqual */
int UT_isEqual(char* received, char* waiting);
/*** EndHeader */
//Funcion que compara dos string
int UT_isEqual(char* received, char* waiting){
	//printf("\nComparacion:\n%s==%s\n",received,waiting);
	if(strstr(received, waiting) != NULL){
		return 1;
	} else {
		return 0;
	}
}
